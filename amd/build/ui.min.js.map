{"version":3,"file":"ui.min.js","sources":["../src/ui.js"],"sourcesContent":["// This file is part of Moodle - http://moodle.org/\n//\n// Moodle is free software: you can redistribute it and/or modify\n// it under the terms of the GNU General Public License as published by\n// the Free Software Foundation, either version 3 of the License, or\n// (at your option) any later version.\n//\n// Moodle is distributed in the hope that it will be useful,\n// but WITHOUT ANY WARRANTY; without even the implied warranty of\n// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n// GNU General Public License for more details.\n//\n// You should have received a copy of the GNU General Public License\n// along with Moodle.  If not, see <http://www.gnu.org/licenses/>.\n\n/**\n * Tiny Filter WS Content configuration.\n *\n * @module      tiny_filterws/commands\n * @copyright   2022 Dani Palou <dani@moodle.com>\n * @license     http://www.gnu.org/copyleft/gpl.html GNU GPL v3 or later\n */\n\nimport {getPredefinedFilters} from './options';\nimport Selectors from './selectors';\n\nimport {\n    get_strings as getStrings,\n} from 'core/str';\nimport Modal from 'tiny_filterws/modal';\nimport ModalEvents from 'core/modal_events';\nimport ModalFactory from 'core/modal_factory';\n\nlet openingSelection = null;\nlet helpStrings = null;\n\nexport const handleAction = (editor) => {\n    openingSelection = {\n        selection: editor.selection,\n        bookmark: editor.selection.getBookmark(),\n    };\n\n    displayDialogue(editor);\n};\n\n/**\n * Get the template context for the dialogue.\n *\n * @param {Editor} editor\n * @param {object} data\n * @returns {object} Promise resolved with the context data.\n */\nconst getTemplateContext = async (editor, data) => {\n    const predefinedFilters = getPredefinedFilters(editor).map((filter, index) => {\n        filter.index = index;\n\n        return filter;\n    });\n\n    Array.from(Object.entries(await getHelpStrings())).forEach(([key, text]) => {\n        data[`${key.toLowerCase()}helpicon`] = {text};\n    });\n\n    return Object.assign({}, {\n        elementid: editor.id,\n        haspredefinedfilters: predefinedFilters && predefinedFilters.length > 0,\n        predefinedfilters: predefinedFilters,\n    }, data);\n};\n\n/**\n * Get help strings.\n *\n * @returns {object} Object with the help strings.\n */\nconst getHelpStrings = async () => {\n    if (!helpStrings) {\n        const [filterUserAgent, origin] = await getStrings([\n            'filteruseragent_help',\n            'origin_help',\n        ].map((key) => ({\n            key,\n            component: 'tiny_filterws',\n        })));\n\n        helpStrings = {filterUserAgent, origin};\n    }\n\n    return helpStrings;\n};\n\nconst displayDialogue = async(editor, data = {}) => {\n    const modal = await ModalFactory.create({\n        type: Modal.TYPE,\n        templateContext: await getTemplateContext(editor, data),\n    });\n    modal.show();\n\n    const $root = modal.getRoot();\n    const root = $root[0];\n    $root.on(ModalEvents.save, (event, modal) => {\n        handleDialogueSubmission(editor, modal);\n    });\n\n    root.addEventListener('click', (e) => {\n        const applyPredefinedButton = e.target.closest(Selectors.applyPredefined);\n        if (!applyPredefinedButton) {\n            return;\n        }\n\n        const predefinedFilters = getPredefinedFilters(editor);\n        const predefinedInput = root.querySelector(Selectors.inputPredefined);\n        const predefinedFilter = predefinedFilters[Number(predefinedInput && predefinedInput.value)];\n        if (!predefinedFilter) {\n            // eslint-disable-next-line no-console\n            console.warn('Predefined filter not found', predefinedInput && predefinedInput.value);\n\n            return;\n        }\n\n        const inputOrigin = root.querySelector(Selectors.inputOrigin);\n        if (inputOrigin) {\n            inputOrigin.value = predefinedFilter.origin;\n        }\n        const inputUserAgent = root.querySelector(Selectors.inputUserAgent);\n        if (inputUserAgent) {\n            inputUserAgent.value = predefinedFilter.useragent;\n        }\n    });\n};\n\nconst handleDialogueSubmission = async(editor, modal) => {\n    const root = modal.getRoot()[0];\n    const inputOrigin = root.querySelector(Selectors.inputOrigin);\n    const inputUserAgent = root.querySelector(Selectors.inputUserAgent);\n    const origin = (inputOrigin && inputOrigin.value) || 'any';\n    const userAgent = (inputUserAgent && inputUserAgent.value) || '';\n    const openingTag = '{fws ' + origin + (userAgent ? (' ua=\"' + userAgent + '\"') : '') + '}';\n    const content = openingSelection.selection.getContent().replace(/([^\\\\])\\n/g, '$1');\n\n    editor.selection.moveToBookmark(openingSelection.bookmark);\n    editor.execCommand('mceInsertContent', false, openingTag + content + '{fws}');\n    editor.selection.moveToBookmark(openingSelection.bookmark);\n};\n"],"names":["openingSelection","helpStrings","editor","selection","bookmark","getBookmark","displayDialogue","getTemplateContext","async","data","predefinedFilters","map","filter","index","Array","from","Object","entries","getHelpStrings","forEach","_ref","key","text","toLowerCase","assign","elementid","id","haspredefinedfilters","length","predefinedfilters","filterUserAgent","origin","component","modal","ModalFactory","create","type","Modal","TYPE","templateContext","show","$root","getRoot","root","on","ModalEvents","save","event","handleDialogueSubmission","addEventListener","e","target","closest","Selectors","applyPredefined","predefinedInput","querySelector","inputPredefined","predefinedFilter","Number","value","console","warn","inputOrigin","inputUserAgent","useragent","userAgent","openingTag","content","getContent","replace","moveToBookmark","execCommand"],"mappings":";;;;;;;4RAiCIA,iBAAmB,KACnBC,YAAc,2BAEWC,SACzBF,iBAAmB,CACfG,UAAWD,OAAOC,UAClBC,SAAUF,OAAOC,UAAUE,eAG/BC,gBAAgBJ,eAUdK,mBAAqBC,MAAON,OAAQO,cAChCC,mBAAoB,iCAAqBR,QAAQS,KAAI,CAACC,OAAQC,SAChED,OAAOC,MAAQA,MAERD,iBAGXE,MAAMC,KAAKC,OAAOC,cAAcC,mBAAmBC,SAAQC,WAAEC,IAAKC,WAC9Db,eAAQY,IAAIE,2BAA2B,CAACD,KAAAA,SAGrCN,OAAOQ,OAAO,GAAI,CACrBC,UAAWvB,OAAOwB,GAClBC,qBAAsBjB,mBAAqBA,kBAAkBkB,OAAS,EACtEC,kBAAmBnB,mBACpBD,OAQDS,eAAiBV,cACdP,YAAa,OACP6B,gBAAiBC,cAAgB,oBAAW,CAC/C,uBACA,eACFpB,KAAKU,OACHA,IAAAA,IACAW,UAAW,qBAGf/B,YAAc,CAAC6B,gBAAAA,gBAAiBC,OAAAA,eAG7B9B,aAGLK,gBAAkBE,eAAMN,YAAQO,4DAAO,SACnCwB,YAAcC,uBAAaC,OAAO,CACpCC,KAAMC,eAAMC,KACZC,sBAAuBhC,mBAAmBL,OAAQO,QAEtDwB,MAAMO,aAEAC,MAAQR,MAAMS,UACdC,KAAOF,MAAM,GACnBA,MAAMG,GAAGC,sBAAYC,MAAM,CAACC,MAAOd,SAC/Be,yBAAyB9C,OAAQ+B,UAGrCU,KAAKM,iBAAiB,SAAUC,QACEA,EAAEC,OAAOC,QAAQC,mBAAUC,8BAKnD5C,mBAAoB,iCAAqBR,QACzCqD,gBAAkBZ,KAAKa,cAAcH,mBAAUI,iBAC/CC,iBAAmBhD,kBAAkBiD,OAAOJ,iBAAmBA,gBAAgBK,YAChFF,6BAEDG,QAAQC,KAAK,8BAA+BP,iBAAmBA,gBAAgBK,aAK7EG,YAAcpB,KAAKa,cAAcH,mBAAUU,aAC7CA,cACAA,YAAYH,MAAQF,iBAAiB3B,cAEnCiC,eAAiBrB,KAAKa,cAAcH,mBAAUW,gBAChDA,iBACAA,eAAeJ,MAAQF,iBAAiBO,eAK9CjB,yBAA2BxC,MAAMN,OAAQ+B,eACrCU,KAAOV,MAAMS,UAAU,GACvBqB,YAAcpB,KAAKa,cAAcH,mBAAUU,aAC3CC,eAAiBrB,KAAKa,cAAcH,mBAAUW,gBAC9CjC,OAAUgC,aAAeA,YAAYH,OAAU,MAC/CM,UAAaF,gBAAkBA,eAAeJ,OAAU,GACxDO,WAAa,QAAUpC,QAAUmC,UAAa,QAAUA,UAAY,IAAO,IAAM,IACjFE,QAAUpE,iBAAiBG,UAAUkE,aAAaC,QAAQ,aAAc,MAE9EpE,OAAOC,UAAUoE,eAAevE,iBAAiBI,UACjDF,OAAOsE,YAAY,oBAAoB,EAAOL,WAAaC,QAAU,SACrElE,OAAOC,UAAUoE,eAAevE,iBAAiBI"}